[{"/Users/rodneycumming/Development/push-notifications/Frontend/src/index.js":"1","/Users/rodneycumming/Development/push-notifications/Frontend/src/App.js":"2","/Users/rodneycumming/Development/push-notifications/Frontend/src/serviceWorkerRegistration.js":"3","/Users/rodneycumming/Development/push-notifications/Frontend/src/reportWebVitals.js":"4","/Users/rodneycumming/Development/push-notifications/frontend/src/serviceWorkerRegistration.js":"5","/Users/rodneycumming/Development/push-notifications/frontend/src/App.js":"6","/Users/rodneycumming/Development/push-notifications/frontend/src/reportWebVitals.js":"7","/Users/rodneycumming/Development/push-notifications/frontend/src/index.js":"8"},{"size":816,"mtime":1608366466210,"results":"9","hashOfConfig":"10"},{"size":4515,"mtime":1608415239797,"results":"11","hashOfConfig":"10"},{"size":5064,"mtime":1608370674432,"results":"12","hashOfConfig":"10"},{"size":364,"mtime":1608333346363,"results":"13","hashOfConfig":"10"},{"size":5064,"mtime":1608370674432,"results":"14","hashOfConfig":"15"},{"size":4664,"mtime":1609570811757,"results":"16","hashOfConfig":"15"},{"size":364,"mtime":1608333346363,"results":"17","hashOfConfig":"15"},{"size":816,"mtime":1609570869014,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"19ic7za",{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1h7m7hl",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rodneycumming/Development/push-notifications/Frontend/src/index.js",[],["38","39"],"/Users/rodneycumming/Development/push-notifications/Frontend/src/App.js",["40","41"],"import React from 'react';\nimport './App.css';\n\nconst apiUrl = 'http://localhost:4000'\n\nfunction App() {\n\n  const publicVapidKey = \"BEDOEHpK6F367nT-y7cpk0u0UE2bC_rLR48wuzQzIbdVw4NEBfasdQg_P3LDzbutk75u3wiUpYUJj7mC0xzhRvE\";\n\n// if(\"serviceWorker\" in navigator) {\n//     send().catch(err => console.log(err));\n//     navigator.serviceWorker.ready.then(function(reg) {\n//     reg.pushManager.getSubscription().then(function(subscription) {\n//       subscription.unsubscribe().then(function(successful) {\n//         console.log('Youve successfully unsubscribed')\n//       }).catch(function(e) {\n//         console.log('Unsubscription failed', e)\n//         // \n//       })\n//     })\n//   });\n// }\n\n//Register service worker, register push , send push notifications  \n// async function send() {\n//     console.log(\"registering service worker\");\n    // const register = await navigator.serviceWorker.register('/service-worker.js', {\n    //     scope: \"http://localhost:3000/\"\n    // });\n//     console.log(\"Service worker registered...\");\n\n    //Register push \n    // console.log(\"Regisering push\");\n    // const subscription  = await register.pushManager.subscribe({\n    //     userVisibleOnly: true,\n    //     applicationServerKey: urlBase64ToUint8Array(publicVapidKey)\n    // })\n    // console.log(\"push registered\");\n\n    //send push notification\n    // console.log(\"sending push...\")\n    // await fetch(`${apiUrl}/subscribe`, {\n    //     method: \"POST\",\n    //     body: JSON.stringify(subscription),\n    //     headers: {\n    //         \"content-type\" : \"application/json\"\n    //     }\n    // })\n    // console.log(\"Push sent...\")\n\n// }\n\n// function registerServiceWorker() {\n//   return navigator.serviceWorker.register(\"/sw.js\");\n// }\n\nfunction isPushNotificationSupported() {\n  return \"serviceWorker\" in navigator && \"PushManager\" in window;\n}\n\nfunction registerServiceWorker() {\n  if ('serviceWorker' in navigator) {\n    // Register a service worker hosted at the root of the\n    // site using the default scope.\n    navigator.serviceWorker.register('/service-worker.js').then(function(registration) {\n      console.log('Service worker registration succeeded:', registration);\n    }, /*catch*/ function(error) {\n      console.log('Service worker registration failed:', error);\n    });\n  } else {\n    console.log('Service workers are not supported.');\n  }\n}\n\nasync function askUserPermission() {\n  return await Notification.requestPermission();\n}\n\nasync function saveSubscription() {\n    // console.log(\"registering service worker\");\n    // const register = await navigator.serviceWorker.register('/service-worker.js', {\n    //     scope: \"/\"\n    // });\n\n    console.log('save subscription');\n    const serviceWorker = await navigator.serviceWorker.ready;\n    \n    console.log(\"Service worker registered...\");\n\n    //Register push \n    console.log(\"Regisering push\");\n    const subscription  = await serviceWorker.pushManager.subscribe({\n        userVisibleOnly: true,\n        applicationServerKey: urlBase64ToUint8Array(publicVapidKey)\n    })\n    console.log(\"push registered\", JSON.stringify(subscription));\n\n    //send push notification\n    console.log(\"sending push...\")\n    await fetch(`${apiUrl}/save-subscription`, {\n        method: \"POST\",\n        body: JSON.stringify(subscription),\n        headers: {\n            \"content-type\" : \"application/json\"\n        }\n    })\n    console.log(\"Push sent...\")\n\n}\n\nasync function pushNotification() {\n    \n    await fetch(`${apiUrl}/push-notification`, {\n        method: \"GET\",\n        mode: \"no-cors\" // 'cors' by default\n    })\n}\n\nfunction urlBase64ToUint8Array(base64String) {\n    const padding = '='.repeat((4 - base64String.length % 4) % 4);\n    const base64 = (base64String + padding)\n      .replace(/-/g, '+')\n      .replace(/_/g, '/');\n   \n    const rawData = window.atob(base64);\n    const outputArray = new Uint8Array(rawData.length);\n   \n    for (let i = 0; i < rawData.length; ++i) {\n      outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        <h2>Web Push Testing</h2>\n        <button onClick={saveSubscription}><h1>Save Subscription</h1></button>\n        <button onClick={pushNotification}><h1>Send Push Notification</h1></button>\n        <button onClick={() => console.log(isPushNotificationSupported())}><h1>Is Push Notification Supported?</h1></button>\n        {/* Todo: unsubscribe */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/rodneycumming/Development/push-notifications/Frontend/src/serviceWorkerRegistration.js",[],"/Users/rodneycumming/Development/push-notifications/Frontend/src/reportWebVitals.js",[],"/Users/rodneycumming/Development/push-notifications/frontend/src/serviceWorkerRegistration.js",[],["42","43"],"/Users/rodneycumming/Development/push-notifications/frontend/src/App.js",[],"/Users/rodneycumming/Development/push-notifications/frontend/src/reportWebVitals.js",[],"/Users/rodneycumming/Development/push-notifications/frontend/src/index.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":61,"column":10,"nodeType":"50","messageId":"51","endLine":61,"endColumn":31},{"ruleId":"48","severity":1,"message":"52","line":75,"column":16,"nodeType":"50","messageId":"51","endLine":75,"endColumn":33},{"ruleId":"44","replacedBy":"53"},{"ruleId":"46","replacedBy":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'registerServiceWorker' is defined but never used.","Identifier","unusedVar","'askUserPermission' is defined but never used.",["55"],["56"],"no-global-assign","no-unsafe-negation"]